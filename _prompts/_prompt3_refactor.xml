<purpose>
    Refactor the entire codebase to create a better working, optimized, and well-structured project
    in NextJS 14+. The goal is to improve code structure, performance, maintainability, and reduce
    code redundancy while adhering to best practices.
</purpose>

<instructions>
    <instruction>
        Analyze the codebase located in the code-files directory.
        Propose a new, optimized file structure.
        You may create, delete, or modify files as necessary.
    </instruction>

    <instruction>
        Use Tailwind's dark mode feature to create a robust light/dark mode system. Ensure all
        components
        and custom styles support both modes seamlessly. Create a shared styles module to avoid
        duplicate CSS styling.
    </instruction>

    <instruction>
        Break down long components and functions to
        improve modularity. Create reusable utility functions and components following best coding
        practices.
    </instruction>
    <instruction>
        Identify and implement optimizations for performance
        bottlenecks. Include strategies such as code splitting, lazy loading, and caching specific
        to
        NextJS 14+.
    </instruction>
    <instruction>
        Write complete, working code for each new and updated file.
        Ensure
        all changes are included and double-checked for accuracy.
    </instruction>
</instructions>

<code-files>
</code-files>

<output_format>
    <![CDATA[ 
{
  "deletedFiles": [
    // path/to/deletedFiles
  ],
  ],
  "filesContent": [
    {
      "file": "path/to/file",
      "action": "create" | "update",
      "description": "Description of the new file and its purpose.",
      "fullCode": "/* Complete code for the new file */"
    },
  ]
}
    ]]>
</output_format>